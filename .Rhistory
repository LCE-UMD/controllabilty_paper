# change ROI names to something plotting appropriate
P.ROIs$ROI <- revalue(P.ROIs$ROI, c("L lBST" = "L BST",
"R BST" = "R BST",
"L Anterior dorsal insula" = "L dorsal anterior Insula",
"L Thalamus (emoproxI shock intersection)"  = "L Thalamus",
"R Amygdala (BLBM)" = "R basolateral Amygdala",
"R Anterior dorsal insula" = "R dorsal anterior Insula",
"L Amygdala (CeME)" = "L central/medial Amygdala",
"R Thalamus (emoproxI shock intersection)" = "R Thalamus"))
# Manually insert P+ values as characters
P <- c("P+ = 0.998",
"P+ = 0.994",
"P+ = 0.990",
"P+ = 0.939",
"P+ = 0.925",
"P+ = 0.904",
"P+ = 0.901",
"P+ = 0.883")
P.ROIs <- P.ROIs %>%
mutate(P = rep(P, each = length(unique(Time))*2)) %>%
arrange(ROI)
# filter positive-going ROIs that are not in Panel A
Pos <- df %>% group_by(ROI) %>% filter(max(Mean) > 0.25 & ROI ==  "R Amygdala (CeME)" |
ROI == "L aMCC" |
ROI == "R aMCC" |
ROI == "L Anterior ventral insula (anterior pole)" |
ROI == "R Anterior ventral insula (anterior pole)" |
ROI == "L Mid posterior insula" |
ROI == "R Mid posterior insula" |
ROI == "L PAG" |
ROI == "R PAG" |
ROI == "L Amygdala (BLBM)")
Pos$ROI <- factor(Pos$ROI)
Pos$ROI <- factor(Pos$ROI, levels = c("L aMCC",
"R aMCC",
"L Anterior ventral insula (anterior pole)",
"R Anterior ventral insula (anterior pole)",
"L Mid posterior insula",
"R Mid posterior insula",
"L Amygdala (BLBM)",
"R Amygdala (CeME)",
"L PAG",
"R PAG"))
Pos$ROI <- revalue(Pos$ROI, c("L aMCC" = "L aMCC",
"R aMCC" = "R aMCC",
"L Anterior ventral insula (anterior pole)" = "L ventral anterior Insula",
"R Anterior ventral insula (anterior pole)" = "R ventral anterior Insula",
"L Mid posterior insula" = "L mid/posterior Insula",
"R Mid posterior insula" = "R mid/posterior Insula",
"L Amygdala (BLBM)" = "L basolateral Amygdala",
"R Amygdala (CeME)" = "R central/medial Amygdala",
"L PAG" = "L PAG",
"R PAG" = "R PAG"))
# filter negative-going ROIs, but do not include any that are in Panel a
Neg <- df %>% group_by(ROI) %>%
filter(max(Mean) < 0.25 & ROI != "R Amygdala (BLBM)" & ROI != "L Amygdala (BLBM)")
Neg$ROI <- factor(Neg$ROI)
# specify order
Neg$ROI <- factor(Neg$ROI,levels = c("vmPFC (from out lab)",
"vmPFC (new 5mm sphere from Hartley paper)",
"PCC (1)",
"PCC (2)",
"L Mid Hippocampus",
"R Posterior Hippocampus"))
# rename to something plot appropriate
Neg$ROI <- revalue(Neg$ROI, c("vmPFC (from out lab)" = "anterior vmPFC",
"vmPFC (new 5mm sphere from Hartley paper)" = "posterior vmPFC",
"PCC (1)" = "PCC/Precuneus",
"PCC (2)" = "PCC",
"L Mid Hippocampus" = "L mid Hippocampus",
"R Posterior Hippocampus" = "R posterior Hippocampus"))
# theme for Figure 4 plots
theme <- theme_bw() +
theme(
text = element_text(family = "Helvetica"),
strip.background = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.x = element_text(size = 6, color = "black", hjust = 0.5),
aspect.ratio = .9,
legend.position = 'none',
axis.ticks = element_line(size = .4),
axis.ticks.length=unit( .05, "cm"),
axis.title = element_text(size = 6.5),
axis.text.x = element_text(size = 4.5,margin = unit(c(0.04,0,0,0), "cm")),
axis.text.y = element_text(size = 4.5, color = "black", margin = unit(c(0,0.05,0,0), "cm")),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
plot.margin=grid::unit(c(0,.5,0,0), "cm"),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y = unit(0.1,"lines"))
P.plot <- ggplot(P.ROIs, aes(x = Time, y = Mean, color = Group, label = P)) +
geom_label(x = 9.2, y = .86, color = "black", size = 1.5, alpha = .65) +
geom_hline(yintercept = 0, linetype = "dashed", color = "dimgray", size = .5) +
geom_point(size = .3) +
geom_line(size = .7) +
facet_wrap(~ROI, ncol = 4, scale = "free", labeller = label_wrap_gen(width = 20, multi_line = TRUE)) +
scale_y_continuous(limits = c(-0.3, 1),
breaks = seq(from = -0.3, to = 1, by = .3),
labels = c("-0.30", "0.00", "0.30", "0.60","0.90"),
expand = y.axis.expand) +
scale_x_continuous(breaks = x.axis.breaks,
labels = c("0.00", "3.00", "6.00", "9.00", "12.00"),
expand = x.axis.expand) +
scale_colour_manual(values = c("#0043B7", "#F5652D"), labels = c("Controllable", "Uncontrollable")) +
labs(x ="Time (seconds)", y = "% signal change", color = NULL, title =NULL) +
theme
ggsave("/Users/kellymorrow/Box/Figures/EMOII - Limbachia et al 2020/generated_plots/PanelA_8ROIs_vertical.pdf",dpi = 600, height = 57, width = 115, unit = "mm")
df.shock <- read.csv('/Users/kellymorrow/Downloads/ShockRespVoxelwiseCluster.csv')
df.shock <- df.shock %>% gather(ROI, Response, 3:23)
df.shock$ROI <- factor(df.shock$ROI)
df.shock %>% filter(ROI == "r PCC")
View(df.shock)
df.shock %>% filter(ROI == "r.PCC")
unique(df.shock$ROI)
df.shock %>% filter(ROI == "R.Posterior.cingulate..cortex")
df.shock %>% filter(ROI == "R.Posterior.cingulate..cortex") %>%
recode(ROI, R.Posterior.cingulate..cortex = "r PCC")
df.shock %>% filter(ROI == "R.Posterior.cingulate..cortex") %>%
recode(ROI, "R.Posterior.cingulate..cortex" = "r PCC")
df.shock %>% filter(ROI == "R.Posterior.cingulate..cortex") %>%
mutate(ROI = recode(ROI, R.Posterior.cingulate..cortex = "r PCC"))
explore <- read.table('/Users/kellymorrow/Box/Lab_related/EMOII/07b-estmated_response.txt', sep = ',', header = TRUE)
View(explore)
l.pINS <- read.csv('/Users/kellymorrow/Downloads/left_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
r.pINS <- read.csv('/Users/kellymorrow/Downloads/right_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
View(l.pINS)
l.pINS <- read.csv('/Users/kellymorrow/Downloads/left_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
l.pINS$ROI <- rep('l posterior Insula', length(l.pINS$Controllable))
r.pINS <- read.csv('/Users/kellymorrow/Downloads/right_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
r.pINS$ROI <- rep('r posterior Insula', length(r.pINS$Controllable))
View(l.pINS)
# import data
l.pINS <- read.csv('/Users/kellymorrow/Downloads/left_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
r.pINS <- read.csv('/Users/kellymorrow/Downloads/right_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
l.pINS <- l.pINS %>%
gather(Group, Mean) %>%
mutate(Time = rep(l.pINS$Time <- seq(from = 0, to = 13.75, by = 1.25),2)) %>%
mutate(ROI = rep("l posterior insula", 24)) %>%
ggplot(l.pINS, aes(x = Time, y = Mean, group = Group, color = Group)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "dimgray", size = .75) +
geom_point(size = .5, shape = 20) +
geom_line(size = .75) +
coord_cartesian(ylim = c(-0.2,.8)) +
scale_x_continuous(breaks = x.axis.breaks,
labels = x.axis.labs,
expand = x.axis.expand) +
scale_y_continuous(breaks = c(-0.2, 0, 0.2, 0.4, 0.6, 0.8),
labels = c("-0.20", "0.00", "0.20", "0.40", "0.60","0.80"),
expand = y.axis.expand) +
scale_colour_manual(values = c("#0043B7", "#F5652D"), labels = c("controllable", "uncontrollable")) +
labs(x = 'Time (seconds)', y = '% signal change', color = NULL, title = "L posterior Insula") +
theme
l.pINS <- l.pINS %>%
gather(Group, Mean) %>%
mutate(Time = rep(l.pINS$Time <- seq(from = 0, to = 13.75, by = 1.25),2)) %>%
mutate(ROI = rep("l posterior insula", 24)) %>%
ggplot(aes(x = Time, y = Mean, group = Group, color = Group)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "dimgray", size = .75) +
geom_point(size = .5, shape = 20) +
geom_line(size = .75) +
coord_cartesian(ylim = c(-0.2,.8)) +
scale_x_continuous(breaks = x.axis.breaks,
labels = x.axis.labs,
expand = x.axis.expand) +
scale_y_continuous(breaks = c(-0.2, 0, 0.2, 0.4, 0.6, 0.8),
labels = c("-0.20", "0.00", "0.20", "0.40", "0.60","0.80"),
expand = y.axis.expand) +
scale_colour_manual(values = c("#0043B7", "#F5652D"), labels = c("controllable", "uncontrollable")) +
labs(x = 'Time (seconds)', y = '% signal change', color = NULL, title = "L posterior Insula") +
theme
ggsave("/Users/kellymorrow/Box/Figures/EMOII - Limbachia et al 2020/generated_plots/Fig6-PanelA_l-INS.pdf",height = 45, width = 45, unit = "mm", dpi = 600)
theme <- theme_bw() +
theme(
text = element_text(family = "Helvetica"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = .25),
aspect.ratio = .85,
legend.position = 'none',
plot.title = element_text(size = 6, hjust = 0.5, margin = unit(c(0,0,0.06,0),"cm")),
axis.text.x = element_text(size = 5, margin = unit(c(0.07,0,0,0),"cm")),
axis.title.x = element_text(size = 6),
axis.text.y = element_text(size = 5, color = "black", margin = unit(c(0,0.05,0,0), "cm")),
axis.title.y = element_text(size = 6),
axis.ticks = element_line(size = .3),
axis.ticks.length=unit(.05, "cm"),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA),
panel.border = element_rect(colour = "black", fill=NA, size=.3))
l.pINS <- l.pINS %>%
gather(Group, Mean) %>%
mutate(Time = rep(l.pINS$Time <- seq(from = 0, to = 13.75, by = 1.25),2)) %>%
mutate(ROI = rep("l posterior insula", 24)) %>%
ggplot(aes(x = Time, y = Mean, group = Group, color = Group)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "dimgray", size = .75) +
geom_point(size = .5, shape = 20) +
geom_line(size = .75) +
coord_cartesian(ylim = c(-0.2,.8)) +
scale_x_continuous(breaks = x.axis.breaks,
labels = x.axis.labs,
expand = x.axis.expand) +
scale_y_continuous(breaks = c(-0.2, 0, 0.2, 0.4, 0.6, 0.8),
labels = c("-0.20", "0.00", "0.20", "0.40", "0.60","0.80"),
expand = y.axis.expand) +
scale_colour_manual(values = c("#0043B7", "#F5652D"), labels = c("controllable", "uncontrollable")) +
labs(x = 'Time (seconds)', y = '% signal change', color = NULL, title = "L posterior Insula") +
theme
library(tidyverse)
library(here)
df <- read.table('/Users/kellymorrow/Downloads/06-ShockResp_emoproxII_ROIs_final_new.txt', sep = ',', header = TRUE)
x.axis.breaks <- seq(from = 0, to = 13.75, by = 3)
x.axis.labs <- c("0.00",  "3.00",  "6.00", " 9.00", "12.00")
x.axis.expand <- c(0.0,0.0)
y.axis.expand <- c(0.04, 0)
# import data
l.pINS <- read.csv('/Users/kellymorrow/Downloads/left_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
r.pINS <- read.csv('/Users/kellymorrow/Downloads/right_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
l.pINS <- l.pINS %>%
gather(Group, Mean) %>%
mutate(Time = rep(l.pINS$Time <- seq(from = 0, to = 13.75, by = 1.25),2)) %>%
mutate(ROI = rep("l posterior insula", 24)) %>%
ggplot(aes(x = Time, y = Mean, group = Group, color = Group)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "dimgray", size = .75) +
geom_point(size = .5, shape = 20) +
geom_line(size = .75) +
coord_cartesian(ylim = c(-0.2,.8)) +
scale_x_continuous(breaks = x.axis.breaks,
labels = x.axis.labs,
expand = x.axis.expand) +
scale_y_continuous(breaks = c(-0.2, 0, 0.2, 0.4, 0.6, 0.8),
labels = c("-0.20", "0.00", "0.20", "0.40", "0.60","0.80"),
expand = y.axis.expand) +
scale_colour_manual(values = c("#0043B7", "#F5652D"), labels = c("controllable", "uncontrollable")) +
labs(x = 'Time (seconds)', y = '% signal change', color = NULL, title = "L posterior Insula") +
theme
theme <- theme_bw() +
theme(
text = element_text(family = "Helvetica"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = .25),
aspect.ratio = .85,
legend.position = 'none',
plot.title = element_text(size = 6, hjust = 0.5, margin = unit(c(0,0,0.06,0),"cm")),
axis.text.x = element_text(size = 5, margin = unit(c(0.07,0,0,0),"cm")),
axis.title.x = element_text(size = 6),
axis.text.y = element_text(size = 5, color = "black", margin = unit(c(0,0.05,0,0), "cm")),
axis.title.y = element_text(size = 6),
axis.ticks = element_line(size = .3),
axis.ticks.length=unit(.05, "cm"),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA),
panel.border = element_rect(colour = "black", fill=NA, size=.3))
# import data
l.pINS <- read.csv('/Users/kellymorrow/Downloads/left_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
r.pINS <- read.csv('/Users/kellymorrow/Downloads/right_PI.1D', sep = '', header = FALSE,
col.names = c("Controllable", "Uncontrollable"))
l.pINS <- l.pINS %>%
gather(Group, Mean) %>%
mutate(Time = rep(l.pINS$Time <- seq(from = 0, to = 13.75, by = 1.25),2)) %>%
mutate(ROI = rep("l posterior insula", 24)) %>%
ggplot(aes(x = Time, y = Mean, group = Group, color = Group)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "dimgray", size = .75) +
geom_point(size = .5, shape = 20) +
geom_line(size = .75) +
coord_cartesian(ylim = c(-0.2,.8)) +
scale_x_continuous(breaks = x.axis.breaks,
labels = x.axis.labs,
expand = x.axis.expand) +
scale_y_continuous(breaks = c(-0.2, 0, 0.2, 0.4, 0.6, 0.8),
labels = c("-0.20", "0.00", "0.20", "0.40", "0.60","0.80"),
expand = y.axis.expand) +
scale_colour_manual(values = c("#0043B7", "#F5652D"), labels = c("controllable", "uncontrollable")) +
labs(x = 'Time (seconds)', y = '% signal change', color = NULL, title = "L posterior Insula") +
theme
ggsave("/Users/kellymorrow/Box/Figures/EMOII - Limbachia et al 2020/generated_plots/Fig6-PanelA_l-INS.pdf",height = 45, width = 45, unit = "mm", dpi = 600)
library(tidyverse)
library(here)
df <- read.table('/Users/kellymorrow/Downloads/06-ShockResp_emoproxII_ROIs_final_new.txt', sep = ',', header = TRUE)
x.axis.breaks <- seq(from = 0, to = 13.75, by = 3)
x.axis.labs <- c("0.00",  "3.00",  "6.00", " 9.00", "12.00")
x.axis.expand <- c(0.0,0.0)
y.axis.expand <- c(0.04, 0)
scale_override <- function(which, scale) {
if(!is.numeric(which) || (length(which) != 1) || (which %% 1 != 0)) {
stop("which must be an integer of length 1")
}
if(is.null(scale$aesthetics) || !any(c("x", "y") %in% scale$aesthetics)) {
stop("scale must be an x or y position scale")
}
structure(list(which = which, scale = scale), class = "scale_override")
}
CustomFacetWrap <- ggproto(
"CustomFacetWrap", FacetWrap,
init_scales = function(self, layout, x_scale = NULL, y_scale = NULL, params) {
# make the initial x, y scales list
scales <- ggproto_parent(FacetWrap, self)$init_scales(layout, x_scale, y_scale, params)
if(is.null(params$scale_overrides)) return(scales)
max_scale_x <- length(scales$x)
max_scale_y <- length(scales$y)
# ... do some modification of the scales$x and scales$y here based on params$scale_overrides
for(scale_override in params$scale_overrides) {
which <- scale_override$which
scale <- scale_override$scale
if("x" %in% scale$aesthetics) {
if(!is.null(scales$x)) {
if(which < 0 || which > max_scale_x) stop("Invalid index of x scale: ", which)
scales$x[[which]] <- scale$clone()
}
} else if("y" %in% scale$aesthetics) {
if(!is.null(scales$y)) {
if(which < 0 || which > max_scale_y) stop("Invalid index of y scale: ", which)
scales$y[[which]] <- scale$clone()
}
} else {
stop("Invalid scale")
}
}
# return scales
scales
}
)
facet_wrap_custom <- function(..., scale_overrides = NULL) {
# take advantage of the sanitizing that happens in facet_wrap
facet_super <- facet_wrap(...)
# sanitize scale overrides
if(inherits(scale_overrides, "scale_override")) {
scale_overrides <- list(scale_overrides)
} else if(!is.list(scale_overrides) ||
!all(vapply(scale_overrides, inherits, "scale_override", FUN.VALUE = logical(1)))) {
stop("scale_overrides must be a scale_override object or a list of scale_override objects")
}
facet_super$params$scale_overrides <- scale_overrides
ggproto(NULL, CustomFacetWrap,
shrink = facet_super$shrink,
params = facet_super$params
)
}
print("Custom facet wrap scale override loaded in! Now plot y-axes can be specified on an individual basis!")
print("Thanks https://fishandwhistle.net/post/2018/modifying-facet-scales-in-ggplot2/ !!")
library(here)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
ggplot(Pos, aes(x = Time, y = Mean, color = Group)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "dimgray", size = .5) +
geom_point(size = .3) +
geom_line(size = .7) +
facet_wrap(~ROI, scale = "free", ncol = 5, labeller = label_wrap_gen(width = 17, multi_line = TRUE)) +
scale_x_continuous(breaks = x.axis.breaks,
labels = x.axis.labs,
expand = x.axis.expand) +
scale_y_continuous(limits = c(-0.4, 1.3),
breaks = c( -0.4, 0, 0.4, 0.8, 1.2),
labels = c("-0.40", "0.00", "0.40", "0.80", "1.20"),
expand = y.axis.expand) +
scale_colour_manual(values = c("#0043B7", "#F5652D"), labels = c("controllable", "uncontrollable")) +
labs(x = "Time (seconds)", y = "% signal change", title = NULL, color = NULL) +
theme
ggsave(here('plots','Fig4-PanelB_posROIs.pdf'), plot = P.plot ,dpi = 600, height = 62, width = 150, unit = "mm")
print("Panel 4b done.")
here()
df <- read.table(here("data/stressor_response_estimates","Fig4.txt"), sep = ',', header = TRUE)
df <- read.table(here('data/stressor_response_estimates','Fig4.txt'), sep = ',', header = TRUE)
library(conflicted)
install.packages('conflicted')
library(conflicted)
tmp <- read.table(here('data/stressor_response_estimates','Fig4.txt'), sep = ',', header = TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
setwd('/Users/kellymorrow/github/controllabilty_paper/')
library(here)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
View(df)
View(P.ROIs)
length(P.ROIs)
length(P.ROIs$ROI)
unique(P.ROIs$ROI)
rep(P, each = length(unique(P.ROIs$Time))
)
unqiue(P.ROIs$Time)
unique(P.ROIs$Time)
P.ROIs <- P.ROIs %>%
mutate(P = rep(P, each = length(unique(Time)*2))) %>%
arrange(ROI)
P.ROIs <- P.ROIs %>%
mutate(P = rep(P, each = 24)) %>%
P.ROIs <- P.ROIs %>%
mutate(P = rep(P, each = 24))
192/8
P
rep(P, each = 24)
P.ROIs <- P.ROIs %>%
mutate(P = rep(P, each = 24))
P.ROIs %>%
mutate(P = rep(P, each = 24))
length(unique(P.ROIs$ROI))
length((P.ROIs$ROI["L BST"]))
iterations <- rep(P, each = unique(P.ROIs$Time)*2)
unique(P.ROIs$Time)*2
iterations <- rep(P, each = length(unique(P.ROIs$Time)*2))
length(unique(P.ROIs$Time)*2
)
length(unique(P.ROIs$Time*2)))
length(unique(P.ROIs$Time*2))
length(unique(P.ROIs$Time))
length(unique(P.ROIs$Time))*2
iterations <- rep(P, each = length(unique(P.ROIs$Time))*2)
P.ROIs <- P.ROIs %>%
mutate(P = rep(P, length(unique(P.ROIs$Time))*2)) %>%
arrange(ROI)
P <- rep(P, each = length(unique(P.ROIs$Time))*2)
P.ROIs <- P.ROIs %>% arrange(ROI) %>% add_column(P)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
read.table(here('data/stressor_response_estimates','Fig7-PCC.txt')
)
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'))
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), sep = '', header = FALSE)
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep = '', header = FALSE)
df.shock
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE)
df.shock
View(df.shock)
View(df.shock)
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep",")
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep=",")
View(df.shock)
View(df.shock)
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep=",", header = TRUE)
View(df)
View(df.shock)
df.shock <- df.shock %>% gather(ROI, Response, 3:23)
View(df.shock)
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep=",", header = TRUE)
df.shock %>% gather(ROI, Response)
df.shock %>% gather(ROI, Response) %>%  filter(ROI == "R.Posterior.cingulate..cortex")
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep=",", header = TRUE)
df.shock %>% gather(ROI, Response) %>%
df.shock %>% filter(ROI == "R.Posterior.cingulate..cortex") %>%  # Filter out r PCC & plot
mutate(ROI = recode(ROI, R.Posterior.cingulate..cortex = "r PCC")) %>%
ggplot(aes(x = Time, y = Response, color = Group)) +
coord_cartesian(ylim = c(-0.6,.2)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "dimgray", size = .75) +
geom_point(size = .5, shape = 20) +
geom_line(size = .75)  +
scale_x_continuous(breaks = x.axis.breaks,
labels = x.axis.labs,
expand = x.axis.expand) +
scale_y_continuous(breaks = c(-0.60, -.40, -.20, 0, .20),
labels = c("-0.60","-0.40","-0.20","0.00","0.20"),
expand = y.axis.expand) +
scale_colour_manual(values = c("#0043B7", "#F5652D"), labels = c("Controllable", "Uncontrollable")) +
labs(x = "Time (seconds)", y = "% signal change", color = NULL, title = "R PCC") +
theme()
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep=",", header = TRUE)
df.shock %>% gather(ROI, Response) %>%
df.shock %>% filter(ROI == "R.Posterior.cingulate..cortex") %>%  # Filter out r PCC & plot
mutate(ROI = recode(ROI, R.Posterior.cingulate..cortex = "r PCC")) %>%
ggplot(aes(x = Time, y = Response, color = Group)) +
coord_cartesian(ylim = c(-0.6,.2)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "dimgray", size = .75) +
geom_point(size = .5, shape = 20) +
geom_line(size = .75)  +
scale_x_continuous(breaks = x.axis.breaks,
labels = x.axis.labs,
expand = x.axis.expand) +
scale_y_continuous(breaks = c(-0.60, -.40, -.20, 0, .20),
labels = c("-0.60","-0.40","-0.20","0.00","0.20"),
expand = y.axis.expand) +
scale_colour_manual(values = c("#0043B7", "#F5652D"), labels = c("Controllable", "Uncontrollable")) +
labs(x = "Time (seconds)", y = "% signal change", color = NULL, title = "R PCC") +
theme()
ggsave(here("plots",'Fig7-PCC_plot.pdf'), height = 45, width = 45, unit = "mm", dpi = 600)
View(df.shock)
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep=",", header = TRUE)
df.shock %>% gather(ROI, Response)
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep=",", header = TRUE)
df.shock %>% gather(ROI, Response, Group)
df.shock <- read.table(here('data/stressor_response_estimates','Fig7-PCC.txt'), fill = TRUE, sep=",", header = TRUE)
df.shock
df.shock %>% gather(ROI, response)
df.shock %>%gather(ROI, Response, 3:23)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
View(df.shock)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
View(Pos)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
source('~/github/controllabilty_paper/11-generateEstimatedResponsePlots.R', echo=TRUE)
which(tibble)
library(ggthemes)
